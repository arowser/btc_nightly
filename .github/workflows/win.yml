---
name: WIN pytest
on:
  push:
    branches:
      - "master"
jobs:
   normal-build:
    name: Normal Test Config ${{ matrix.cfg }}
    runs-on: windows-latest
    env:
      DEVELOPER: 1
      VALGRIND: 0
      EXPERIMENTAL_FEATURES: 0
      COMPAT: 1
    defaults:
     run:
       shell: wsl-bash -u root {0}

    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: setup
        uses: Vampire/setup-wsl@v1
        #with:
        #    distribution: Ubuntu-22.04

      - name: Install dependencies
        run: |
          apt-get update && apt-get upgrade -y && apt-get install -y ca-certificates \
          autoconf automake build-essential git libtool libgmp-dev libsqlite3-dev \
          python3 python3-pip net-tools zlib1g-dev libsodium-dev gettext eatmydata
          pip3 install --upgrade pip

      - name: Checkout cln source
        run: git clone --progress https://github.com/ElementsProject/lightning.git

        #- name: setup
        #  uses: Vampire/setup-wsl@v1
        #  with:
        #    wsl-shell-user: test

      - name: Build
        env:
          VALGRIND: ${{ matrix.VALGRIND }}
          DEVELOPER: ${{ matrix.DEVELOPER }}
          EXPERIMENTAL_FEATURES: ${{ matrix.EXPERIMENTAL_FEATURES }}
          EXPERIMENTAL_DUAL_FUND: ${{ matrix.EXPERIMENTAL_DUAL_FUND }}
          COMPILER: ${{ matrix.COMPILER }}
          COMPAT: ${{ matrix.COMPAT }}
          FUZZING: ${{ matrix.FUZZING }}
          PYTEST_PAR: ${{ matrix.PYTEST_PAR }}
          PYTEST_OPTS: ${{ matrix.PYTEST_OPTS }}
          NETWORK: ${{ matrix.NETWORK }}
          TEST_CHECK_DBSTMTS: ${{ matrix.TEST_CHECK_DBSTMTS }}
          TEST_CMD: ${{ matrix.TEST_CMD }}
          TEST_GROUP_COUNT: ${{ matrix.TEST_GROUP_COUNT }}
          TEST_GROUP: ${{ matrix.TEST_GROUP }}
          TEST_DB_PROVIDER: ${{ matrix.DB }}
        run: |
          cd lightning
          pip3 install mako
          #pip3 install --user poetry
          #poetry config virtualenvs.create false --local
          #poetry install
          ./configure --disable-rust --disable-developer
          make -j
          # shellcheck disable=SC2086
          #eatmydata $TEST_CMD

